# Application Configuration
spring.application.name=exam-service
server.port=9003

# Datasource (PostgreSQL) - mirrors profile-service
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/exam_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka (optional)
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=exam-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties[spring.json.trusted.packages]=*
spring.kafka.consumer.properties.auto-offset-reset=earliest

# Eureka Client Configuration
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:9999/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:localhost}

# Management Endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.info.env.enabled=true

# Logging
logging.level.com.netflix.eureka=INFO
logging.level.com.netflix.discovery=INFO
logging.level.com.dao.examservice=DEBUG

# Disable JMX to avoid port conflicts
spring.jmx.enabled=false

# Application-specific
app.jwt.secret=${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890}
